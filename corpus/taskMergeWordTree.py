# merge the tree generated by LSTM and corresponding words.
# malformed tree should output just TOP

# python taskMergeWordTree.py a.trainline a.words a.evalline
# a.trainline is the trainline generated by RNN
# a.words is the tokens
# a.evaline is the merged tree 

from corpusUtil import *
from nltk.tree import Tree
import os
import sys

def main():
    fn1 = sys.argv[1]
    fn2 = sys.argv[2]
    fn3 = sys.argv[3]
    fn4 = fn3 + ".01"

    f1 = open(fn1)
    f2 = open(fn2)
    f3 = open(fn3,'w')
    f4 = open(fn4,'w')

    lines1=[]
    lines2=[]

    for line in f1:
        lines1.append(line)
    
    for line in f2:
        lines2.append(line)
        
    f1.close()
    f2.close()
    
    assert(len(lines1) == len(lines2))

    nmalform = 0
    wrong_count = 0
    for i in xrange(len(lines1)):
        print i+1
        trainline = lines1[i]
        words = lines2[i].split()
        tree = trainline2tree(trainline,words)
        flag = 1
        if type(tree) == str:
            print tree
            if tree == "malform":
                nmalform += 1
            if tree == "wrong length":
                wrong_count += 1
            tree = Tree.fromstring("(TOP )")
            flag = 0
        
        f3.write(tree2line(tree) + "\n")
        f4.write('{}\n'.format(flag))
        
    f3.close()
    f4.close()
    print "Malform: ", nmalform
    print "Wrong length: ", wrong_count
    print "Total:", len(lines1)




if __name__ == "__main__":
    main()
    #test()
